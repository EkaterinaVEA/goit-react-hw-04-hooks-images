{"version":3,"sources":["services/Api.js","components/App/App.styles.jsx","components/Searchbar/Searchbar.styles.jsx","components/Searchbar/Searchbar.jsx","components/Modal/Modal.styles.jsx","components/Loader/Loader.styles.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.styles.jsx","images/defaultImage.jpg","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styles.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styles.jsx","components/Button/Button.jsx","components/App/App.jsx","index.js"],"names":["axios","defaults","baseURL","Api","searchQuery","page","params","get","data","hits","Section","Header","Form","Button","ButtonLabel","Input","Searchbar","onSubmit","useState","value","setValue","e","preventDefault","type","onChange","target","placeholder","Overlay","ModalStyled","Image","CloseBtn","ContainerLoader","Spinner","color","width","height","timeout","modalRoot","document","querySelector","Modal","image","onClose","loaded","setLoaded","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","onClick","currentTarget","src","alt","onLoad","size","Item","ImageGalleryItem","webformatURL","tags","onImageSelect","defaultImage","Gallery","ImageGallery","images","map","id","largeImageURL","Btn","App","setSearchQuery","setPage","setImages","selectedImage","setSelectedImage","status","setStatus","getImages","then","length","Error","prevImages","scrollTo","top","documentElement","scrollHeight","behavior","catch","error","console","warn","toast","warning","query","info","body","style","overflow","onLoadMore","prevPage","ReactDOM","render","StrictMode","getElementById","smoothscroll","polyfill"],"mappings":"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","file":"static/js/main.f6ecbde9.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api';\n\nexport class Api {\n  static async getImages(searchQuery, page) {\n    const API_KEY = '21740199-d7b6e81c83ae38a8fb2587200';\n    const params = `?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n    const { data } = await axios.get(params);\n    return data.hits;\n  }\n}\n","import styled from '@emotion/styled/macro';\n\nexport const Section = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\n","import styled from '@emotion/styled/macro';\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const ButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\n// export const Input = styled.header``;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Header, Form, Button, ButtonLabel, Input } from './Searchbar.styles';\n\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [value, setValue] = useState(\"\");\n\n  const handleInputChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(value);\n    setValue(\"\");\n  };\n\n  return (\n    <Header>\n      <Form onSubmit={handleSearchSubmit}>\n        <Button type=\"submit\">\n          <ButtonLabel>Search</ButtonLabel>\n        </Button>\n\n        <Input\n          value={value}\n          onChange={handleInputChange}\n          type=\"text\"\n          placeholder=\"Search images and photos\"\n        />\n      </Form>\n    </Header>\n  );\n}\n\nSearchbar.propTypes = { onSubmit: PropTypes.func.isRequired };","import styled from '@emotion/styled/macro';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nexport const ModalStyled = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nexport const Image = styled.img`\n  object-fit: cover;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  padding: 10px;\n  border: none;\n  cursor: pointer;\n  color: #fff;\n  background-color: transparent;\n  transition: transform 250ms ease-out, color 250ms ease-in-out;\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n","import styled from '@emotion/styled/macro';\n\nexport const ContainerLoader = styled.div`\n  display: block;\n  margin: 0 auto;\n  align-items: center;\n  padding-top: 150px;\n`;\n","import Loader from 'react-loader-spinner';\nimport { ContainerLoader } from './Loader.styles';\nconst Spinner = () => {\n  return (\n    <ContainerLoader>\n      <Loader\n        type=\"Puff\"\n        color=\"#3f51b5\"\n        width=\"250\"\n        height=\"250\"\n        timeout={3000} //3 secs\n      />\n    </ContainerLoader>\n  );\n};\n\nexport default Spinner;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalStyled, Image, CloseBtn } from './Modal.styles';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport Spinner from '../Loader/Loader';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ image, onClose }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleOverlayClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onClose();\n  };\n\n  const handleImageLoaded = () => {\n    setLoaded(true);\n  };\n\n  return createPortal(\n    <Overlay onClick={handleOverlayClick}>\n      <ModalStyled>\n        <Image\n          src={image.src}\n          alt={image.alt}\n          onLoad={handleImageLoaded}\n        />\n        {loaded ? (\n          <CloseBtn onClick={onClose}>\n            <RiCloseCircleLine size=\"30\" />\n          </CloseBtn>\n        ) : (\n          <Spinner />\n        )}\n      </ModalStyled>\n    </Overlay>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  image: PropTypes.objectOf(PropTypes.string).isRequired,\n  onClose: PropTypes.func.isRequired,\n}","import styled from '@emotion/styled/macro';\n\nexport const Item = styled.li`\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.2);\n    cursor: zoom-in;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/defaultImage.2e01288c.jpg\";","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Item, Image } from './ImageGalleryItem.styles';\nimport defaultImage from '../../images/defaultImage.jpg';\n\nexport const ImageGalleryItem = ({ webformatURL, tags, onImageSelect }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  const handleImageLoad = () => {\n    setLoaded(true);\n  };\n\n  return (\n    <Item>\n      <Image\n        src={loaded ? webformatURL : defaultImage}\n        alt={tags}\n        onClick={onImageSelect}\n        onLoad={handleImageLoad}\n      />\n    </Item>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onImageSelect: PropTypes.func.isRequired,\n};","import styled from '@emotion/styled/macro';\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import PropTypes from 'prop-types';\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\nimport { Gallery } from './ImageGallery.styles';\n\nconst ImageGallery = ({ images, onImageSelect }) => {\n  return (\n    <Gallery>\n      {images.map(image => {\n        const { id, webformatURL, largeImageURL, tags } = image;\n        return (\n          <ImageGalleryItem\n            key={id}\n            webformatURL={webformatURL}\n            tags={tags}\n            onImageSelect={() => {\n              onImageSelect(largeImageURL, tags);\n            }}\n          />\n        );\n      })}\n    </Gallery>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onImageSelect: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import styled from '@emotion/styled/macro';\n\nexport const Btn = styled.button`\n  padding: 8px 16px;\n  margin: 0 auto;\n  border-radius: 10px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Btn } from './Button.styles';\n\nfunction Button({ onClick }) {\n  return (\n    <Btn type=\"button\" onClick={onClick}>\n      Load more\n    </Btn>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Api } from '../../services/Api';\n\nimport { Section } from './App.styles';\nimport { Searchbar } from '../Searchbar/Searchbar';\nimport { Modal } from '../Modal/Modal';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport Button from '../Button/Button';\nimport Spinner from '../Loader/Loader';\n\nexport const App = () => {\n  const [searchQuery, setSearchQuery] = useState('')\n  const [page, setPage] = useState(1)\n  const [images, setImages] = useState([])\n  const [selectedImage, setSelectedImage] = useState(null)\n  const [status, setStatus] = useState('idle')\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    setStatus('pending');\n\n    Api.getImages(searchQuery, page).then((images) => {\n      if (!images.length) {\n        throw new Error(`No results were found for \"${searchQuery}\"`)\n      }\n\n      setImages((prevImages) => [...prevImages, ...images]);\n      setStatus('resolve');\n\n      page > 1 &&\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n    })\n      .catch((error) => {\n        if (error) {\n          console.warn(error)\n        }\n        setStatus('idle');\n\n        toast.warning(`Not Found any images by query: ${searchQuery}`)\n      })\n  }, [searchQuery, page]);\n\n  const resetState = () => {\n    setSearchQuery(\"\");\n    setPage(1);\n    setImages([]);\n    setSelectedImage(null);\n    setStatus('idle');\n  };\n\n  const onSubmit = query => {\n    if (query === searchQuery) {\n      return toast.info('Please, enter query!');\n    }\n    resetState();\n    setSearchQuery({ query });\n  };\n\n  const onModalClose = () => {\n    setSelectedImage(null);\n    document.body.style.overflow = \"\";\n  };\n\n  const onImageSelect = (src, alt) => {\n    setSelectedImage({ src, alt });\n    document.body.style.overflow = \"hidden\";\n  };\n\n  const onLoadMore = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  switch (status) {\n    case 'idle':\n      return (\n        <Section>\n          <Searchbar onSubmit={onSubmit} />\n        </Section>\n      );\n\n    case 'pending':\n      return (\n        <Section>\n          <Searchbar onSubmit={onSubmit} />\n          <ImageGallery images={images} onImageSelect={onImageSelect} />\n          <Spinner />\n          {images.length > 0 && <Button onClick={onLoadMore} />}\n        </Section>\n      );\n\n    case 'resolve':\n      return (\n        <Section>\n          <Searchbar onSubmit={onSubmit} />\n          <ImageGallery images={images} onImageSelect={onImageSelect} />\n          {images.length > 0 && <Button onClick={onLoadMore} />}\n          {selectedImage && (\n            <Modal image={selectedImage} onClose={onModalClose} />\n          )}\n          <ToastContainer />\n        </Section>\n      );\n\n    default:\n      return (\n        <Section>\n          <Searchbar onSubmit={onSubmit} />\n          <ToastContainer />\n        </Section>\n      );\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport smoothscroll from 'smoothscroll-polyfill';\nimport { App } from './components/App/App.jsx'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nsmoothscroll.polyfill();"],"sourceRoot":""}